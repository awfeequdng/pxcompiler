Terminals unused in grammar

    sized_type_literal
    AND
    AS
    ASSERT
    ASYNC
    AWAIT
    BREAK
    CLASS
    CONTINUE
    DEF
    DEL
    ELIF
    EXCEPT
    FINALLY
    FOR
    FROM
    GLOBAL
    IMPORT
    IN
    IS
    LAMBDA
    NONLOCAL
    NOT
    OR
    PASS
    RETURN
    TRY
    WHILE
    WITH
    YIELD
    ARROW
    AMPERSAND
    COLON_BANG
    DOUBLE_ARROW
    EQUAL
    EQUAL_EQUAL
    MINUS
    PLUS
    SELF
    SLASH
    UNDERSCORE
    EOLCOMMENT
    TYPE_COMMENT


Grammar

    0 $accept: units END_OF_FILE

    1 units: units script_unit
    2      | script_unit
    3      | sep

    4 script_unit: statement

    5 statements: INDENT statements1 DEDENT

    6 sep_statements: sep statements

    7 body_stmts: single_line_statements
    8           | sep_statements

    9 statements1: statements1 statement
   10            | statement

   11 single_line_statements: single_line_multi_statements NEWLINE
   12                       | single_line_multi_statements COMMENT NEWLINE
   13                       | single_line_statement NEWLINE
   14                       | single_line_statement SEMICOLON NEWLINE
   15                       | single_line_statement SEMICOLON COMMENT NEWLINE
   16                       | single_line_statement COMMENT NEWLINE

   17 single_line_multi_statements: single_line_multi_statements_opt single_line_statement
   18                             | single_line_multi_statements_opt single_line_statement SEMICOLON

   19 single_line_multi_statements_opt: single_line_multi_statements_opt single_line_statement SEMICOLON
   20                                 | single_line_statement SEMICOLON

   21 statement: single_line_statement sep
   22          | multi_line_statement
   23          | multi_line_statement sep

   24 single_line_statement: expression_statment

   25 multi_line_statement: if_statement

   26 if_statement: IF expr COLON body_stmts
   27             | IF expr COLON body_stmts ELSE COLON body_stmts

   28 expression_statment: expr

   29 string: string string_literal
   30       | string_literal
   31       | id string_literal
   32       | string id string_literal

   33 expr_list_opt: expr_list
   34              | ε

   35 expr_list: expr_list "," expr
   36          | expr

   37 expr: id
   38     | integer_literal
   39     | string
   40     | real_literal
   41     | image_literal
   42     | TRUE
   43     | FALSE
   44     | NONE
   45     | ELLIPSIS
   46     | "(" expr ")"
   47     | "(" ")"
   48     | "[" expr_list_opt "]"
   49     | "[" expr_list "," "]"
   50     | "{" expr_list "}"
   51     | "{" expr_list "," "}"
   52     | expr "." id

   53 id: identifier

   54 sep: sep sep_one
   55    | sep_one

   56 sep_one: NEWLINE
   57        | COMMENT
   58        | SEMICOLON


Terminals, with rules where they appear

    END_OF_FILE (0) 0
    error (256)
    integer_literal <long long> (258) 38
    real_literal <double> (259) 40
    image_literal <double> (260) 41
    identifier <std::string> (261) 53
    sized_type_literal <std::string> (262)
    string_literal <std::string> (263) 29 30 31 32
    FALSE (264) 43
    TRUE (265) 42
    NONE (266) 44
    AND (267)
    AS (268)
    ASSERT (269)
    ASYNC (270)
    AWAIT (271)
    BREAK (272)
    CLASS (273)
    CONTINUE (274)
    DEF (275)
    DEL (276)
    ELIF (277)
    ELSE (278) 27
    EXCEPT (279)
    FINALLY (280)
    FOR (281)
    FROM (282)
    GLOBAL (283)
    IF (284) 26 27
    IMPORT (285)
    IN (286)
    IS (287)
    LAMBDA (288)
    NONLOCAL (289)
    NOT (290)
    OR (291)
    PASS (292)
    RETURN (293)
    TRY (294)
    WHILE (295)
    WITH (296)
    YIELD (297)
    ARROW (298)
    AMPERSAND (299)
    COLON (300) 26 27
    COLON_BANG (301)
    "," (302) 35 49 51
    DOUBLE_ARROW (303)
    EQUAL (304)
    EQUAL_EQUAL (305)
    "{" (306) 50 51
    "(" (307) 46 47
    "[" (308) 48 49
    MINUS (309)
    "." (310) 52
    PLUS (311)
    ELLIPSIS (312) 45
    "}" (313) 50 51
    ")" (314) 46 47
    "]" (315) 48 49
    SELF (316)
    SEMICOLON (317) 14 15 18 19 20 58
    SLASH (318)
    UNDERSCORE (319)
    INDENT (320) 5
    DEDENT (321) 5
    NEWLINE (322) 11 12 13 14 15 16 56
    COMMENT (323) 12 15 16 57
    EOLCOMMENT (324)
    TYPE_COMMENT (325)


Nonterminals, with rules where they appear

    $accept (71)
        on left: 0
    units (72)
        on left: 1 2 3
        on right: 0 1
    script_unit <Nonnull<Statement*>> (73)
        on left: 4
        on right: 1 2
    statements <std::vector<Nonnull<Statement*>>> (74)
        on left: 5
        on right: 6
    sep_statements <std::vector<Nonnull<Statement*>>> (75)
        on left: 6
        on right: 8
    body_stmts <std::vector<Nonnull<Statement*>>> (76)
        on left: 7 8
        on right: 26 27
    statements1 <std::vector<Nonnull<Statement*>>> (77)
        on left: 9 10
        on right: 5 9
    single_line_statements <std::vector<Nonnull<Statement*>>> (78)
        on left: 11 12 13 14 15 16
        on right: 7
    single_line_multi_statements <std::vector<Nonnull<Statement*>>> (79)
        on left: 17 18
        on right: 11 12
    single_line_multi_statements_opt <std::vector<Nonnull<Statement*>>> (80)
        on left: 19 20
        on right: 17 18 19
    statement <Nonnull<Statement*>> (81)
        on left: 21 22 23
        on right: 4 9 10
    single_line_statement <Nonnull<Statement*>> (82)
        on left: 24
        on right: 13 14 15 16 17 18 19 20 21
    multi_line_statement <Nonnull<Statement*>> (83)
        on left: 25
        on right: 22 23
    if_statement <Nonnull<Statement*>> (84)
        on left: 26 27
        on right: 25
    expression_statment <Nonnull<Statement*>> (85)
        on left: 28
        on right: 24
    string <Nonnull<Expression*>> (86)
        on left: 29 30 31 32
        on right: 29 32 39
    expr_list_opt <std::vector<Nonnull<Expression*>>> (87)
        on left: 33 34
        on right: 48
    expr_list <std::vector<Nonnull<Expression*>>> (88)
        on left: 35 36
        on right: 33 35 49 50 51
    expr <Nonnull<Expression*>> (89)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
        on right: 26 27 28 35 36 46 52
    id <Nonnull<Name*>> (90)
        on left: 53
        on right: 31 32 37 52
    sep <std::vector<std::string>> (91)
        on left: 54 55
        on right: 3 6 21 23 54
    sep_one <std::string> (92)
        on left: 56 57 58
        on right: 54 55


State 0

    0 $accept: • units END_OF_FILE

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    IF               shift, and go to state 9
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13
    SEMICOLON        shift, and go to state 14
    NEWLINE          shift, and go to state 15
    COMMENT          shift, and go to state 16

    units                  go to state 17
    script_unit            go to state 18
    statement              go to state 19
    single_line_statement  go to state 20
    multi_line_statement   go to state 21
    if_statement           go to state 22
    expression_statment    go to state 23
    string                 go to state 24
    expr                   go to state 25
    id                     go to state 26
    sep                    go to state 27
    sep_one                go to state 28


State 1

   38 expr: integer_literal •

    $default  reduce using rule 38 (expr)


State 2

   40 expr: real_literal •

    $default  reduce using rule 40 (expr)


State 3

   41 expr: image_literal •

    $default  reduce using rule 41 (expr)


State 4

   53 id: identifier •

    $default  reduce using rule 53 (id)


State 5

   30 string: string_literal •

    $default  reduce using rule 30 (string)


State 6

   43 expr: FALSE •

    $default  reduce using rule 43 (expr)


State 7

   42 expr: TRUE •

    $default  reduce using rule 42 (expr)


State 8

   44 expr: NONE •

    $default  reduce using rule 44 (expr)


State 9

   26 if_statement: IF • expr COLON body_stmts
   27             | IF • expr COLON body_stmts ELSE COLON body_stmts

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13

    string  go to state 24
    expr    go to state 29
    id      go to state 26


State 10

   50 expr: "{" • expr_list "}"
   51     | "{" • expr_list "," "}"

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13

    string     go to state 24
    expr_list  go to state 30
    expr       go to state 31
    id         go to state 26


State 11

   46 expr: "(" • expr ")"
   47     | "(" • ")"

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13
    ")"              shift, and go to state 32

    string  go to state 24
    expr    go to state 33
    id      go to state 26


State 12

   48 expr: "[" • expr_list_opt "]"
   49     | "[" • expr_list "," "]"

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13

    $default  reduce using rule 34 (expr_list_opt)

    string         go to state 24
    expr_list_opt  go to state 34
    expr_list      go to state 35
    expr           go to state 31
    id             go to state 26


State 13

   45 expr: ELLIPSIS •

    $default  reduce using rule 45 (expr)


State 14

   58 sep_one: SEMICOLON •

    $default  reduce using rule 58 (sep_one)


State 15

   56 sep_one: NEWLINE •

    $default  reduce using rule 56 (sep_one)


State 16

   57 sep_one: COMMENT •

    $default  reduce using rule 57 (sep_one)


State 17

    0 $accept: units • END_OF_FILE
    1 units: units • script_unit

    END_OF_FILE      shift, and go to state 36
    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    IF               shift, and go to state 9
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13

    script_unit            go to state 37
    statement              go to state 19
    single_line_statement  go to state 20
    multi_line_statement   go to state 21
    if_statement           go to state 22
    expression_statment    go to state 23
    string                 go to state 24
    expr                   go to state 25
    id                     go to state 26


State 18

    2 units: script_unit •

    $default  reduce using rule 2 (units)


State 19

    4 script_unit: statement •

    $default  reduce using rule 4 (script_unit)


State 20

   21 statement: single_line_statement • sep

    SEMICOLON  shift, and go to state 14
    NEWLINE    shift, and go to state 15
    COMMENT    shift, and go to state 16

    sep      go to state 38
    sep_one  go to state 28


State 21

   22 statement: multi_line_statement •
   23          | multi_line_statement • sep

    SEMICOLON  shift, and go to state 14
    NEWLINE    shift, and go to state 15
    COMMENT    shift, and go to state 16

    $default  reduce using rule 22 (statement)

    sep      go to state 39
    sep_one  go to state 28


State 22

   25 multi_line_statement: if_statement •

    $default  reduce using rule 25 (multi_line_statement)


State 23

   24 single_line_statement: expression_statment •

    $default  reduce using rule 24 (single_line_statement)


State 24

   29 string: string • string_literal
   32       | string • id string_literal
   39 expr: string •

    identifier      shift, and go to state 4
    string_literal  shift, and go to state 40

    $default  reduce using rule 39 (expr)

    id  go to state 41


State 25

   28 expression_statment: expr •
   52 expr: expr • "." id

    "."  shift, and go to state 42

    $default  reduce using rule 28 (expression_statment)


State 26

   31 string: id • string_literal
   37 expr: id •

    string_literal  shift, and go to state 43

    $default  reduce using rule 37 (expr)


State 27

    3 units: sep •
   54 sep: sep • sep_one

    SEMICOLON  shift, and go to state 14
    NEWLINE    shift, and go to state 15
    COMMENT    shift, and go to state 16

    $default  reduce using rule 3 (units)

    sep_one  go to state 44


State 28

   55 sep: sep_one •

    $default  reduce using rule 55 (sep)


State 29

   26 if_statement: IF expr • COLON body_stmts
   27             | IF expr • COLON body_stmts ELSE COLON body_stmts
   52 expr: expr • "." id

    COLON  shift, and go to state 45
    "."    shift, and go to state 42


State 30

   35 expr_list: expr_list • "," expr
   50 expr: "{" expr_list • "}"
   51     | "{" expr_list • "," "}"

    ","  shift, and go to state 46
    "}"  shift, and go to state 47


State 31

   36 expr_list: expr •
   52 expr: expr • "." id

    "."  shift, and go to state 42

    $default  reduce using rule 36 (expr_list)


State 32

   47 expr: "(" ")" •

    $default  reduce using rule 47 (expr)


State 33

   46 expr: "(" expr • ")"
   52     | expr • "." id

    "."  shift, and go to state 42
    ")"  shift, and go to state 48


State 34

   48 expr: "[" expr_list_opt • "]"

    "]"  shift, and go to state 49


State 35

   33 expr_list_opt: expr_list •
   35 expr_list: expr_list • "," expr
   49 expr: "[" expr_list • "," "]"

    ","  shift, and go to state 50

    $default  reduce using rule 33 (expr_list_opt)


State 36

    0 $accept: units END_OF_FILE •

    $default  accept


State 37

    1 units: units script_unit •

    $default  reduce using rule 1 (units)


State 38

   21 statement: single_line_statement sep •
   54 sep: sep • sep_one

    SEMICOLON  shift, and go to state 14
    NEWLINE    shift, and go to state 15
    COMMENT    shift, and go to state 16

    $default  reduce using rule 21 (statement)

    sep_one  go to state 44


State 39

   23 statement: multi_line_statement sep •
   54 sep: sep • sep_one

    SEMICOLON  shift, and go to state 14
    NEWLINE    shift, and go to state 15
    COMMENT    shift, and go to state 16

    $default  reduce using rule 23 (statement)

    sep_one  go to state 44


State 40

   29 string: string string_literal •

    $default  reduce using rule 29 (string)


State 41

   32 string: string id • string_literal

    string_literal  shift, and go to state 51


State 42

   52 expr: expr "." • id

    identifier  shift, and go to state 4

    id  go to state 52


State 43

   31 string: id string_literal •

    $default  reduce using rule 31 (string)


State 44

   54 sep: sep sep_one •

    $default  reduce using rule 54 (sep)


State 45

   26 if_statement: IF expr COLON • body_stmts
   27             | IF expr COLON • body_stmts ELSE COLON body_stmts

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13
    SEMICOLON        shift, and go to state 14
    NEWLINE          shift, and go to state 15
    COMMENT          shift, and go to state 16

    sep_statements                    go to state 53
    body_stmts                        go to state 54
    single_line_statements            go to state 55
    single_line_multi_statements      go to state 56
    single_line_multi_statements_opt  go to state 57
    single_line_statement             go to state 58
    expression_statment               go to state 23
    string                            go to state 24
    expr                              go to state 25
    id                                go to state 26
    sep                               go to state 59
    sep_one                           go to state 28


State 46

   35 expr_list: expr_list "," • expr
   51 expr: "{" expr_list "," • "}"

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13
    "}"              shift, and go to state 60

    string  go to state 24
    expr    go to state 61
    id      go to state 26


State 47

   50 expr: "{" expr_list "}" •

    $default  reduce using rule 50 (expr)


State 48

   46 expr: "(" expr ")" •

    $default  reduce using rule 46 (expr)


State 49

   48 expr: "[" expr_list_opt "]" •

    $default  reduce using rule 48 (expr)


State 50

   35 expr_list: expr_list "," • expr
   49 expr: "[" expr_list "," • "]"

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13
    "]"              shift, and go to state 62

    string  go to state 24
    expr    go to state 61
    id      go to state 26


State 51

   32 string: string id string_literal •

    $default  reduce using rule 32 (string)


State 52

   52 expr: expr "." id •

    $default  reduce using rule 52 (expr)


State 53

    8 body_stmts: sep_statements •

    $default  reduce using rule 8 (body_stmts)


State 54

   26 if_statement: IF expr COLON body_stmts •
   27             | IF expr COLON body_stmts • ELSE COLON body_stmts

    ELSE  shift, and go to state 63

    $default  reduce using rule 26 (if_statement)


State 55

    7 body_stmts: single_line_statements •

    $default  reduce using rule 7 (body_stmts)


State 56

   11 single_line_statements: single_line_multi_statements • NEWLINE
   12                       | single_line_multi_statements • COMMENT NEWLINE

    NEWLINE  shift, and go to state 64
    COMMENT  shift, and go to state 65


State 57

   17 single_line_multi_statements: single_line_multi_statements_opt • single_line_statement
   18                             | single_line_multi_statements_opt • single_line_statement SEMICOLON
   19 single_line_multi_statements_opt: single_line_multi_statements_opt • single_line_statement SEMICOLON

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13

    single_line_statement  go to state 66
    expression_statment    go to state 23
    string                 go to state 24
    expr                   go to state 25
    id                     go to state 26


State 58

   13 single_line_statements: single_line_statement • NEWLINE
   14                       | single_line_statement • SEMICOLON NEWLINE
   15                       | single_line_statement • SEMICOLON COMMENT NEWLINE
   16                       | single_line_statement • COMMENT NEWLINE
   20 single_line_multi_statements_opt: single_line_statement • SEMICOLON

    SEMICOLON  shift, and go to state 67
    NEWLINE    shift, and go to state 68
    COMMENT    shift, and go to state 69


State 59

    6 sep_statements: sep • statements
   54 sep: sep • sep_one

    SEMICOLON  shift, and go to state 14
    INDENT     shift, and go to state 70
    NEWLINE    shift, and go to state 15
    COMMENT    shift, and go to state 16

    statements  go to state 71
    sep_one     go to state 44


State 60

   51 expr: "{" expr_list "," "}" •

    $default  reduce using rule 51 (expr)


State 61

   35 expr_list: expr_list "," expr •
   52 expr: expr • "." id

    "."  shift, and go to state 42

    $default  reduce using rule 35 (expr_list)


State 62

   49 expr: "[" expr_list "," "]" •

    $default  reduce using rule 49 (expr)


State 63

   27 if_statement: IF expr COLON body_stmts ELSE • COLON body_stmts

    COLON  shift, and go to state 72


State 64

   11 single_line_statements: single_line_multi_statements NEWLINE •

    $default  reduce using rule 11 (single_line_statements)


State 65

   12 single_line_statements: single_line_multi_statements COMMENT • NEWLINE

    NEWLINE  shift, and go to state 73


State 66

   17 single_line_multi_statements: single_line_multi_statements_opt single_line_statement •
   18                             | single_line_multi_statements_opt single_line_statement • SEMICOLON
   19 single_line_multi_statements_opt: single_line_multi_statements_opt single_line_statement • SEMICOLON

    SEMICOLON  shift, and go to state 74

    $default  reduce using rule 17 (single_line_multi_statements)


State 67

   14 single_line_statements: single_line_statement SEMICOLON • NEWLINE
   15                       | single_line_statement SEMICOLON • COMMENT NEWLINE
   20 single_line_multi_statements_opt: single_line_statement SEMICOLON •

    NEWLINE  shift, and go to state 75
    COMMENT  shift, and go to state 76

    $default  reduce using rule 20 (single_line_multi_statements_opt)


State 68

   13 single_line_statements: single_line_statement NEWLINE •

    $default  reduce using rule 13 (single_line_statements)


State 69

   16 single_line_statements: single_line_statement COMMENT • NEWLINE

    NEWLINE  shift, and go to state 77


State 70

    5 statements: INDENT • statements1 DEDENT

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    IF               shift, and go to state 9
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13

    statements1            go to state 78
    statement              go to state 79
    single_line_statement  go to state 20
    multi_line_statement   go to state 21
    if_statement           go to state 22
    expression_statment    go to state 23
    string                 go to state 24
    expr                   go to state 25
    id                     go to state 26


State 71

    6 sep_statements: sep statements •

    $default  reduce using rule 6 (sep_statements)


State 72

   27 if_statement: IF expr COLON body_stmts ELSE COLON • body_stmts

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13
    SEMICOLON        shift, and go to state 14
    NEWLINE          shift, and go to state 15
    COMMENT          shift, and go to state 16

    sep_statements                    go to state 53
    body_stmts                        go to state 80
    single_line_statements            go to state 55
    single_line_multi_statements      go to state 56
    single_line_multi_statements_opt  go to state 57
    single_line_statement             go to state 58
    expression_statment               go to state 23
    string                            go to state 24
    expr                              go to state 25
    id                                go to state 26
    sep                               go to state 59
    sep_one                           go to state 28


State 73

   12 single_line_statements: single_line_multi_statements COMMENT NEWLINE •

    $default  reduce using rule 12 (single_line_statements)


State 74

   18 single_line_multi_statements: single_line_multi_statements_opt single_line_statement SEMICOLON •
   19 single_line_multi_statements_opt: single_line_multi_statements_opt single_line_statement SEMICOLON •

    NEWLINE   reduce using rule 18 (single_line_multi_statements)
    COMMENT   reduce using rule 18 (single_line_multi_statements)
    $default  reduce using rule 19 (single_line_multi_statements_opt)


State 75

   14 single_line_statements: single_line_statement SEMICOLON NEWLINE •

    $default  reduce using rule 14 (single_line_statements)


State 76

   15 single_line_statements: single_line_statement SEMICOLON COMMENT • NEWLINE

    NEWLINE  shift, and go to state 81


State 77

   16 single_line_statements: single_line_statement COMMENT NEWLINE •

    $default  reduce using rule 16 (single_line_statements)


State 78

    5 statements: INDENT statements1 • DEDENT
    9 statements1: statements1 • statement

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    IF               shift, and go to state 9
    "{"              shift, and go to state 10
    "("              shift, and go to state 11
    "["              shift, and go to state 12
    ELLIPSIS         shift, and go to state 13
    DEDENT           shift, and go to state 82

    statement              go to state 83
    single_line_statement  go to state 20
    multi_line_statement   go to state 21
    if_statement           go to state 22
    expression_statment    go to state 23
    string                 go to state 24
    expr                   go to state 25
    id                     go to state 26


State 79

   10 statements1: statement •

    $default  reduce using rule 10 (statements1)


State 80

   27 if_statement: IF expr COLON body_stmts ELSE COLON body_stmts •

    $default  reduce using rule 27 (if_statement)


State 81

   15 single_line_statements: single_line_statement SEMICOLON COMMENT NEWLINE •

    $default  reduce using rule 15 (single_line_statements)


State 82

    5 statements: INDENT statements1 DEDENT •

    $default  reduce using rule 5 (statements)


State 83

    9 statements1: statements1 statement •

    $default  reduce using rule 9 (statements1)
