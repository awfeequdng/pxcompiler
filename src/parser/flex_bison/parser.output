Terminals unused in grammar

    sized_type_literal
    AND
    AS
    ASSERT
    ASYNC
    AWAIT
    BREAK
    CLASS
    CONTINUE
    DEF
    DEL
    ELIF
    EXCEPT
    FINALLY
    FOR
    FROM
    GLOBAL
    IMPORT
    IN
    IS
    LAMBDA
    NONLOCAL
    NOT
    OR
    PASS
    RETURN
    TRY
    WHILE
    WITH
    YIELD
    ARROW
    AMPERSAND
    COLON_BANG
    COMMA
    DOUBLE_ARROW
    EQUAL
    EQUAL_EQUAL
    LBRACE
    LPARENT
    LBRACKET
    MINUS
    PERIOD
    PLUS
    RBRACE
    RPARENT
    RBRACKET
    SELF
    SLASH
    UNDERSCORE
    EOLCOMMENT
    TYPE_COMMENT


Grammar

    0 $accept: units END_OF_FILE

    1 units: units script_unit
    2      | script_unit
    3      | sep

    4 script_unit: statement

    5 statements: INDENT statements1 DEDENT

    6 sep_statements: sep statements

    7 body_stmts: single_line_statements
    8           | sep_statements

    9 statements1: statements1 statement
   10            | statement

   11 single_line_statements: single_line_multi_statements NEWLINE
   12                       | single_line_multi_statements COMMENT NEWLINE
   13                       | single_line_statement NEWLINE
   14                       | single_line_statement SEMICOLON NEWLINE
   15                       | single_line_statement SEMICOLON COMMENT NEWLINE
   16                       | single_line_statement COMMENT NEWLINE

   17 single_line_multi_statements: single_line_multi_statements_opt single_line_statement
   18                             | single_line_multi_statements_opt single_line_statement SEMICOLON

   19 single_line_multi_statements_opt: single_line_multi_statements_opt single_line_statement SEMICOLON
   20                                 | single_line_statement SEMICOLON

   21 statement: single_line_statement sep
   22          | multi_line_statement
   23          | multi_line_statement sep

   24 single_line_statement: expression_statment

   25 multi_line_statement: if_statement

   26 if_statement: IF expr COLON body_stmts
   27             | IF expr COLON body_stmts ELSE COLON body_stmts

   28 expression_statment: expr

   29 string: string string_literal
   30       | string_literal
   31       | id string_literal
   32       | string id string_literal

   33 expr: id
   34     | integer_literal
   35     | string
   36     | real_literal
   37     | image_literal
   38     | TRUE
   39     | FALSE
   40     | NONE
   41     | ELLIPSIS
   42     | "(" expr ")"

   43 id: identifier

   44 sep: sep sep_one
   45    | sep_one

   46 sep_one: NEWLINE
   47        | COMMENT
   48        | SEMICOLON


Terminals, with rules where they appear

    END_OF_FILE (0) 0
    error (256)
    integer_literal <long long> (258) 34
    real_literal <double> (259) 36
    image_literal <double> (260) 37
    identifier <std::string> (261) 43
    sized_type_literal <std::string> (262)
    string_literal <std::string> (263) 29 30 31 32
    FALSE (264) 39
    TRUE (265) 38
    NONE (266) 40
    AND (267)
    AS (268)
    ASSERT (269)
    ASYNC (270)
    AWAIT (271)
    BREAK (272)
    CLASS (273)
    CONTINUE (274)
    DEF (275)
    DEL (276)
    ELIF (277)
    ELSE (278) 27
    EXCEPT (279)
    FINALLY (280)
    FOR (281)
    FROM (282)
    GLOBAL (283)
    IF (284) 26 27
    IMPORT (285)
    IN (286)
    IS (287)
    LAMBDA (288)
    NONLOCAL (289)
    NOT (290)
    OR (291)
    PASS (292)
    RETURN (293)
    TRY (294)
    WHILE (295)
    WITH (296)
    YIELD (297)
    ARROW (298)
    AMPERSAND (299)
    COLON (300) 26 27
    COLON_BANG (301)
    COMMA (302)
    DOUBLE_ARROW (303)
    EQUAL (304)
    EQUAL_EQUAL (305)
    LBRACE (306)
    LPARENT (307)
    LBRACKET (308)
    MINUS (309)
    PERIOD (310)
    PLUS (311)
    ELLIPSIS (312) 41
    RBRACE (313)
    RPARENT (314)
    RBRACKET (315)
    SELF (316)
    SEMICOLON (317) 14 15 18 19 20 48
    SLASH (318)
    UNDERSCORE (319)
    INDENT (320) 5
    DEDENT (321) 5
    NEWLINE (322) 11 12 13 14 15 16 46
    COMMENT (323) 12 15 16 47
    EOLCOMMENT (324)
    TYPE_COMMENT (325)
    "(" (326) 42
    ")" (327) 42


Nonterminals, with rules where they appear

    $accept (73)
        on left: 0
    units (74)
        on left: 1 2 3
        on right: 0 1
    script_unit <Nonnull<Statement*>> (75)
        on left: 4
        on right: 1 2
    statements <std::vector<Nonnull<Statement*>>> (76)
        on left: 5
        on right: 6
    sep_statements <std::vector<Nonnull<Statement*>>> (77)
        on left: 6
        on right: 8
    body_stmts <std::vector<Nonnull<Statement*>>> (78)
        on left: 7 8
        on right: 26 27
    statements1 <std::vector<Nonnull<Statement*>>> (79)
        on left: 9 10
        on right: 5 9
    single_line_statements <std::vector<Nonnull<Statement*>>> (80)
        on left: 11 12 13 14 15 16
        on right: 7
    single_line_multi_statements <std::vector<Nonnull<Statement*>>> (81)
        on left: 17 18
        on right: 11 12
    single_line_multi_statements_opt <std::vector<Nonnull<Statement*>>> (82)
        on left: 19 20
        on right: 17 18 19
    statement <Nonnull<Statement*>> (83)
        on left: 21 22 23
        on right: 4 9 10
    single_line_statement <Nonnull<Statement*>> (84)
        on left: 24
        on right: 13 14 15 16 17 18 19 20 21
    multi_line_statement <Nonnull<Statement*>> (85)
        on left: 25
        on right: 22 23
    if_statement <Nonnull<Statement*>> (86)
        on left: 26 27
        on right: 25
    expression_statment <Nonnull<Statement*>> (87)
        on left: 28
        on right: 24
    string <Nonnull<Expression*>> (88)
        on left: 29 30 31 32
        on right: 29 32 35
    expr <Nonnull<Expression*>> (89)
        on left: 33 34 35 36 37 38 39 40 41 42
        on right: 26 27 28 42
    id <Nonnull<Name*>> (90)
        on left: 43
        on right: 31 32 33
    sep <std::vector<std::string>> (91)
        on left: 44 45
        on right: 3 6 21 23 44
    sep_one <std::string> (92)
        on left: 46 47 48
        on right: 44 45


State 0

    0 $accept: • units END_OF_FILE

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    IF               shift, and go to state 9
    ELLIPSIS         shift, and go to state 10
    SEMICOLON        shift, and go to state 11
    NEWLINE          shift, and go to state 12
    COMMENT          shift, and go to state 13
    "("              shift, and go to state 14

    units                  go to state 15
    script_unit            go to state 16
    statement              go to state 17
    single_line_statement  go to state 18
    multi_line_statement   go to state 19
    if_statement           go to state 20
    expression_statment    go to state 21
    string                 go to state 22
    expr                   go to state 23
    id                     go to state 24
    sep                    go to state 25
    sep_one                go to state 26


State 1

   34 expr: integer_literal •

    $default  reduce using rule 34 (expr)


State 2

   36 expr: real_literal •

    $default  reduce using rule 36 (expr)


State 3

   37 expr: image_literal •

    $default  reduce using rule 37 (expr)


State 4

   43 id: identifier •

    $default  reduce using rule 43 (id)


State 5

   30 string: string_literal •

    $default  reduce using rule 30 (string)


State 6

   39 expr: FALSE •

    $default  reduce using rule 39 (expr)


State 7

   38 expr: TRUE •

    $default  reduce using rule 38 (expr)


State 8

   40 expr: NONE •

    $default  reduce using rule 40 (expr)


State 9

   26 if_statement: IF • expr COLON body_stmts
   27             | IF • expr COLON body_stmts ELSE COLON body_stmts

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    ELLIPSIS         shift, and go to state 10
    "("              shift, and go to state 14

    string  go to state 22
    expr    go to state 27
    id      go to state 24


State 10

   41 expr: ELLIPSIS •

    $default  reduce using rule 41 (expr)


State 11

   48 sep_one: SEMICOLON •

    $default  reduce using rule 48 (sep_one)


State 12

   46 sep_one: NEWLINE •

    $default  reduce using rule 46 (sep_one)


State 13

   47 sep_one: COMMENT •

    $default  reduce using rule 47 (sep_one)


State 14

   42 expr: "(" • expr ")"

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    ELLIPSIS         shift, and go to state 10
    "("              shift, and go to state 14

    string  go to state 22
    expr    go to state 28
    id      go to state 24


State 15

    0 $accept: units • END_OF_FILE
    1 units: units • script_unit

    END_OF_FILE      shift, and go to state 29
    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    IF               shift, and go to state 9
    ELLIPSIS         shift, and go to state 10
    "("              shift, and go to state 14

    script_unit            go to state 30
    statement              go to state 17
    single_line_statement  go to state 18
    multi_line_statement   go to state 19
    if_statement           go to state 20
    expression_statment    go to state 21
    string                 go to state 22
    expr                   go to state 23
    id                     go to state 24


State 16

    2 units: script_unit •

    $default  reduce using rule 2 (units)


State 17

    4 script_unit: statement •

    $default  reduce using rule 4 (script_unit)


State 18

   21 statement: single_line_statement • sep

    SEMICOLON  shift, and go to state 11
    NEWLINE    shift, and go to state 12
    COMMENT    shift, and go to state 13

    sep      go to state 31
    sep_one  go to state 26


State 19

   22 statement: multi_line_statement •
   23          | multi_line_statement • sep

    SEMICOLON  shift, and go to state 11
    NEWLINE    shift, and go to state 12
    COMMENT    shift, and go to state 13

    $default  reduce using rule 22 (statement)

    sep      go to state 32
    sep_one  go to state 26


State 20

   25 multi_line_statement: if_statement •

    $default  reduce using rule 25 (multi_line_statement)


State 21

   24 single_line_statement: expression_statment •

    $default  reduce using rule 24 (single_line_statement)


State 22

   29 string: string • string_literal
   32       | string • id string_literal
   35 expr: string •

    identifier      shift, and go to state 4
    string_literal  shift, and go to state 33

    $default  reduce using rule 35 (expr)

    id  go to state 34


State 23

   28 expression_statment: expr •

    $default  reduce using rule 28 (expression_statment)


State 24

   31 string: id • string_literal
   33 expr: id •

    string_literal  shift, and go to state 35

    $default  reduce using rule 33 (expr)


State 25

    3 units: sep •
   44 sep: sep • sep_one

    SEMICOLON  shift, and go to state 11
    NEWLINE    shift, and go to state 12
    COMMENT    shift, and go to state 13

    $default  reduce using rule 3 (units)

    sep_one  go to state 36


State 26

   45 sep: sep_one •

    $default  reduce using rule 45 (sep)


State 27

   26 if_statement: IF expr • COLON body_stmts
   27             | IF expr • COLON body_stmts ELSE COLON body_stmts

    COLON  shift, and go to state 37


State 28

   42 expr: "(" expr • ")"

    ")"  shift, and go to state 38


State 29

    0 $accept: units END_OF_FILE •

    $default  accept


State 30

    1 units: units script_unit •

    $default  reduce using rule 1 (units)


State 31

   21 statement: single_line_statement sep •
   44 sep: sep • sep_one

    SEMICOLON  shift, and go to state 11
    NEWLINE    shift, and go to state 12
    COMMENT    shift, and go to state 13

    $default  reduce using rule 21 (statement)

    sep_one  go to state 36


State 32

   23 statement: multi_line_statement sep •
   44 sep: sep • sep_one

    SEMICOLON  shift, and go to state 11
    NEWLINE    shift, and go to state 12
    COMMENT    shift, and go to state 13

    $default  reduce using rule 23 (statement)

    sep_one  go to state 36


State 33

   29 string: string string_literal •

    $default  reduce using rule 29 (string)


State 34

   32 string: string id • string_literal

    string_literal  shift, and go to state 39


State 35

   31 string: id string_literal •

    $default  reduce using rule 31 (string)


State 36

   44 sep: sep sep_one •

    $default  reduce using rule 44 (sep)


State 37

   26 if_statement: IF expr COLON • body_stmts
   27             | IF expr COLON • body_stmts ELSE COLON body_stmts

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    ELLIPSIS         shift, and go to state 10
    SEMICOLON        shift, and go to state 11
    NEWLINE          shift, and go to state 12
    COMMENT          shift, and go to state 13
    "("              shift, and go to state 14

    sep_statements                    go to state 40
    body_stmts                        go to state 41
    single_line_statements            go to state 42
    single_line_multi_statements      go to state 43
    single_line_multi_statements_opt  go to state 44
    single_line_statement             go to state 45
    expression_statment               go to state 21
    string                            go to state 22
    expr                              go to state 23
    id                                go to state 24
    sep                               go to state 46
    sep_one                           go to state 26


State 38

   42 expr: "(" expr ")" •

    $default  reduce using rule 42 (expr)


State 39

   32 string: string id string_literal •

    $default  reduce using rule 32 (string)


State 40

    8 body_stmts: sep_statements •

    $default  reduce using rule 8 (body_stmts)


State 41

   26 if_statement: IF expr COLON body_stmts •
   27             | IF expr COLON body_stmts • ELSE COLON body_stmts

    ELSE  shift, and go to state 47

    $default  reduce using rule 26 (if_statement)


State 42

    7 body_stmts: single_line_statements •

    $default  reduce using rule 7 (body_stmts)


State 43

   11 single_line_statements: single_line_multi_statements • NEWLINE
   12                       | single_line_multi_statements • COMMENT NEWLINE

    NEWLINE  shift, and go to state 48
    COMMENT  shift, and go to state 49


State 44

   17 single_line_multi_statements: single_line_multi_statements_opt • single_line_statement
   18                             | single_line_multi_statements_opt • single_line_statement SEMICOLON
   19 single_line_multi_statements_opt: single_line_multi_statements_opt • single_line_statement SEMICOLON

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    ELLIPSIS         shift, and go to state 10
    "("              shift, and go to state 14

    single_line_statement  go to state 50
    expression_statment    go to state 21
    string                 go to state 22
    expr                   go to state 23
    id                     go to state 24


State 45

   13 single_line_statements: single_line_statement • NEWLINE
   14                       | single_line_statement • SEMICOLON NEWLINE
   15                       | single_line_statement • SEMICOLON COMMENT NEWLINE
   16                       | single_line_statement • COMMENT NEWLINE
   20 single_line_multi_statements_opt: single_line_statement • SEMICOLON

    SEMICOLON  shift, and go to state 51
    NEWLINE    shift, and go to state 52
    COMMENT    shift, and go to state 53


State 46

    6 sep_statements: sep • statements
   44 sep: sep • sep_one

    SEMICOLON  shift, and go to state 11
    INDENT     shift, and go to state 54
    NEWLINE    shift, and go to state 12
    COMMENT    shift, and go to state 13

    statements  go to state 55
    sep_one     go to state 36


State 47

   27 if_statement: IF expr COLON body_stmts ELSE • COLON body_stmts

    COLON  shift, and go to state 56


State 48

   11 single_line_statements: single_line_multi_statements NEWLINE •

    $default  reduce using rule 11 (single_line_statements)


State 49

   12 single_line_statements: single_line_multi_statements COMMENT • NEWLINE

    NEWLINE  shift, and go to state 57


State 50

   17 single_line_multi_statements: single_line_multi_statements_opt single_line_statement •
   18                             | single_line_multi_statements_opt single_line_statement • SEMICOLON
   19 single_line_multi_statements_opt: single_line_multi_statements_opt single_line_statement • SEMICOLON

    SEMICOLON  shift, and go to state 58

    $default  reduce using rule 17 (single_line_multi_statements)


State 51

   14 single_line_statements: single_line_statement SEMICOLON • NEWLINE
   15                       | single_line_statement SEMICOLON • COMMENT NEWLINE
   20 single_line_multi_statements_opt: single_line_statement SEMICOLON •

    NEWLINE  shift, and go to state 59
    COMMENT  shift, and go to state 60

    $default  reduce using rule 20 (single_line_multi_statements_opt)


State 52

   13 single_line_statements: single_line_statement NEWLINE •

    $default  reduce using rule 13 (single_line_statements)


State 53

   16 single_line_statements: single_line_statement COMMENT • NEWLINE

    NEWLINE  shift, and go to state 61


State 54

    5 statements: INDENT • statements1 DEDENT

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    IF               shift, and go to state 9
    ELLIPSIS         shift, and go to state 10
    "("              shift, and go to state 14

    statements1            go to state 62
    statement              go to state 63
    single_line_statement  go to state 18
    multi_line_statement   go to state 19
    if_statement           go to state 20
    expression_statment    go to state 21
    string                 go to state 22
    expr                   go to state 23
    id                     go to state 24


State 55

    6 sep_statements: sep statements •

    $default  reduce using rule 6 (sep_statements)


State 56

   27 if_statement: IF expr COLON body_stmts ELSE COLON • body_stmts

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    ELLIPSIS         shift, and go to state 10
    SEMICOLON        shift, and go to state 11
    NEWLINE          shift, and go to state 12
    COMMENT          shift, and go to state 13
    "("              shift, and go to state 14

    sep_statements                    go to state 40
    body_stmts                        go to state 64
    single_line_statements            go to state 42
    single_line_multi_statements      go to state 43
    single_line_multi_statements_opt  go to state 44
    single_line_statement             go to state 45
    expression_statment               go to state 21
    string                            go to state 22
    expr                              go to state 23
    id                                go to state 24
    sep                               go to state 46
    sep_one                           go to state 26


State 57

   12 single_line_statements: single_line_multi_statements COMMENT NEWLINE •

    $default  reduce using rule 12 (single_line_statements)


State 58

   18 single_line_multi_statements: single_line_multi_statements_opt single_line_statement SEMICOLON •
   19 single_line_multi_statements_opt: single_line_multi_statements_opt single_line_statement SEMICOLON •

    NEWLINE   reduce using rule 18 (single_line_multi_statements)
    COMMENT   reduce using rule 18 (single_line_multi_statements)
    $default  reduce using rule 19 (single_line_multi_statements_opt)


State 59

   14 single_line_statements: single_line_statement SEMICOLON NEWLINE •

    $default  reduce using rule 14 (single_line_statements)


State 60

   15 single_line_statements: single_line_statement SEMICOLON COMMENT • NEWLINE

    NEWLINE  shift, and go to state 65


State 61

   16 single_line_statements: single_line_statement COMMENT NEWLINE •

    $default  reduce using rule 16 (single_line_statements)


State 62

    5 statements: INDENT statements1 • DEDENT
    9 statements1: statements1 • statement

    integer_literal  shift, and go to state 1
    real_literal     shift, and go to state 2
    image_literal    shift, and go to state 3
    identifier       shift, and go to state 4
    string_literal   shift, and go to state 5
    FALSE            shift, and go to state 6
    TRUE             shift, and go to state 7
    NONE             shift, and go to state 8
    IF               shift, and go to state 9
    ELLIPSIS         shift, and go to state 10
    DEDENT           shift, and go to state 66
    "("              shift, and go to state 14

    statement              go to state 67
    single_line_statement  go to state 18
    multi_line_statement   go to state 19
    if_statement           go to state 20
    expression_statment    go to state 21
    string                 go to state 22
    expr                   go to state 23
    id                     go to state 24


State 63

   10 statements1: statement •

    $default  reduce using rule 10 (statements1)


State 64

   27 if_statement: IF expr COLON body_stmts ELSE COLON body_stmts •

    $default  reduce using rule 27 (if_statement)


State 65

   15 single_line_statements: single_line_statement SEMICOLON COMMENT NEWLINE •

    $default  reduce using rule 15 (single_line_statements)


State 66

    5 statements: INDENT statements1 DEDENT •

    $default  reduce using rule 5 (statements)


State 67

    9 statements1: statements1 statement •

    $default  reduce using rule 9 (statements1)
