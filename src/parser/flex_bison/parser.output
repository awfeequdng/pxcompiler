Terminals unused in grammar

    sized_type_literal
    FALSE
    TRUE
    NONE
    AND
    AS
    ASSERT
    ASYNC
    AWAIT
    BREAK
    CLASS
    CONTINUE
    DEF
    DEL
    ELIF
    EXCEPT
    FINALLY
    FOR
    FROM
    GLOBAL
    IMPORT
    IN
    IS
    LAMBDA
    NONLOCAL
    NOT
    OR
    PASS
    RETURN
    TRY
    WHILE
    WITH
    YIELD
    ARROW
    AMPERSAND
    COLON_BANG
    COMMA
    DOUBLE_ARROW
    EQUAL
    EQUAL_EQUAL
    LBRACE
    LPARENT
    LBRACKET
    MINUS
    PERIOD
    PLUS
    RBRACE
    RPARENT
    RBRACKET
    SELF
    SLASH
    UNDERSCORE
    EOLCOMMENT
    TYPE_COMMENT


Grammar

    0 $accept: units END_OF_FILE

    1 units: units script_unit
    2      | script_unit
    3      | sep

    4 script_unit: statement

    5 statements: INDENT statements1 DEDENT

    6 sep_statements: sep statements

    7 body_stmts: single_line_statements
    8           | sep_statements

    9 statements1: statements1 statement
   10            | statement

   11 single_line_statements: single_line_multi_statements NEWLINE
   12                       | single_line_multi_statements COMMENT NEWLINE
   13                       | single_line_statement NEWLINE
   14                       | single_line_statement SEMICOLON NEWLINE
   15                       | single_line_statement SEMICOLON COMMENT NEWLINE
   16                       | single_line_statement COMMENT NEWLINE

   17 single_line_multi_statements: single_line_multi_statements_opt single_line_statement
   18                             | single_line_multi_statements_opt single_line_statement SEMICOLON

   19 single_line_multi_statements_opt: single_line_multi_statements_opt single_line_statement SEMICOLON
   20                                 | single_line_statement SEMICOLON

   21 statement: single_line_statement sep
   22          | multi_line_statement
   23          | multi_line_statement sep

   24 single_line_statement: expression_statment

   25 multi_line_statement: if_statement

   26 if_statement: IF expr COLON body_stmts
   27             | IF expr COLON body_stmts ELSE COLON body_stmts

   28 expression_statment: expr

   29 string: string string_literal
   30       | string_literal
   31       | id string_literal

   32 expr: id
   33     | integer_literal
   34     | string

   35 id: identifier

   36 sep: sep sep_one
   37    | sep_one

   38 sep_one: NEWLINE
   39        | COMMENT
   40        | SEMICOLON


Terminals, with rules where they appear

    END_OF_FILE (0) 0
    error (256)
    integer_literal <long long> (258) 33
    identifier <std::string> (259) 35
    sized_type_literal <std::string> (260)
    string_literal <std::string> (261) 29 30 31
    FALSE (262)
    TRUE (263)
    NONE (264)
    AND (265)
    AS (266)
    ASSERT (267)
    ASYNC (268)
    AWAIT (269)
    BREAK (270)
    CLASS (271)
    CONTINUE (272)
    DEF (273)
    DEL (274)
    ELIF (275)
    ELSE (276) 27
    EXCEPT (277)
    FINALLY (278)
    FOR (279)
    FROM (280)
    GLOBAL (281)
    IF (282) 26 27
    IMPORT (283)
    IN (284)
    IS (285)
    LAMBDA (286)
    NONLOCAL (287)
    NOT (288)
    OR (289)
    PASS (290)
    RETURN (291)
    TRY (292)
    WHILE (293)
    WITH (294)
    YIELD (295)
    ARROW (296)
    AMPERSAND (297)
    COLON (298) 26 27
    COLON_BANG (299)
    COMMA (300)
    DOUBLE_ARROW (301)
    EQUAL (302)
    EQUAL_EQUAL (303)
    LBRACE (304)
    LPARENT (305)
    LBRACKET (306)
    MINUS (307)
    PERIOD (308)
    PLUS (309)
    RBRACE (310)
    RPARENT (311)
    RBRACKET (312)
    SELF (313)
    SEMICOLON (314) 14 15 18 19 20 40
    SLASH (315)
    UNDERSCORE (316)
    INDENT (317) 5
    DEDENT (318) 5
    NEWLINE (319) 11 12 13 14 15 16 38
    COMMENT (320) 12 15 16 39
    EOLCOMMENT (321)
    TYPE_COMMENT (322)


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    units (69)
        on left: 1 2 3
        on right: 0 1
    script_unit <Nonnull<Statement*>> (70)
        on left: 4
        on right: 1 2
    statements <std::vector<Nonnull<Statement*>>> (71)
        on left: 5
        on right: 6
    sep_statements <std::vector<Nonnull<Statement*>>> (72)
        on left: 6
        on right: 8
    body_stmts <std::vector<Nonnull<Statement*>>> (73)
        on left: 7 8
        on right: 26 27
    statements1 <std::vector<Nonnull<Statement*>>> (74)
        on left: 9 10
        on right: 5 9
    single_line_statements <std::vector<Nonnull<Statement*>>> (75)
        on left: 11 12 13 14 15 16
        on right: 7
    single_line_multi_statements <std::vector<Nonnull<Statement*>>> (76)
        on left: 17 18
        on right: 11 12
    single_line_multi_statements_opt <std::vector<Nonnull<Statement*>>> (77)
        on left: 19 20
        on right: 17 18 19
    statement <Nonnull<Statement*>> (78)
        on left: 21 22 23
        on right: 4 9 10
    single_line_statement <Nonnull<Statement*>> (79)
        on left: 24
        on right: 13 14 15 16 17 18 19 20 21
    multi_line_statement <Nonnull<Statement*>> (80)
        on left: 25
        on right: 22 23
    if_statement <Nonnull<Statement*>> (81)
        on left: 26 27
        on right: 25
    expression_statment <Nonnull<Statement*>> (82)
        on left: 28
        on right: 24
    string <Nonnull<Expression*>> (83)
        on left: 29 30 31
        on right: 29 34
    expr <Nonnull<Expression*>> (84)
        on left: 32 33 34
        on right: 26 27 28
    id <Nonnull<Name*>> (85)
        on left: 35
        on right: 31 32
    sep <std::vector<std::string>> (86)
        on left: 36 37
        on right: 3 6 21 23 36
    sep_one <std::string> (87)
        on left: 38 39 40
        on right: 36 37


State 0

    0 $accept: • units END_OF_FILE

    integer_literal  shift, and go to state 1
    identifier       shift, and go to state 2
    string_literal   shift, and go to state 3
    IF               shift, and go to state 4
    SEMICOLON        shift, and go to state 5
    NEWLINE          shift, and go to state 6
    COMMENT          shift, and go to state 7

    units                  go to state 8
    script_unit            go to state 9
    statement              go to state 10
    single_line_statement  go to state 11
    multi_line_statement   go to state 12
    if_statement           go to state 13
    expression_statment    go to state 14
    string                 go to state 15
    expr                   go to state 16
    id                     go to state 17
    sep                    go to state 18
    sep_one                go to state 19


State 1

   33 expr: integer_literal •

    $default  reduce using rule 33 (expr)


State 2

   35 id: identifier •

    $default  reduce using rule 35 (id)


State 3

   30 string: string_literal •

    $default  reduce using rule 30 (string)


State 4

   26 if_statement: IF • expr COLON body_stmts
   27             | IF • expr COLON body_stmts ELSE COLON body_stmts

    integer_literal  shift, and go to state 1
    identifier       shift, and go to state 2
    string_literal   shift, and go to state 3

    string  go to state 15
    expr    go to state 20
    id      go to state 17


State 5

   40 sep_one: SEMICOLON •

    $default  reduce using rule 40 (sep_one)


State 6

   38 sep_one: NEWLINE •

    $default  reduce using rule 38 (sep_one)


State 7

   39 sep_one: COMMENT •

    $default  reduce using rule 39 (sep_one)


State 8

    0 $accept: units • END_OF_FILE
    1 units: units • script_unit

    END_OF_FILE      shift, and go to state 21
    integer_literal  shift, and go to state 1
    identifier       shift, and go to state 2
    string_literal   shift, and go to state 3
    IF               shift, and go to state 4

    script_unit            go to state 22
    statement              go to state 10
    single_line_statement  go to state 11
    multi_line_statement   go to state 12
    if_statement           go to state 13
    expression_statment    go to state 14
    string                 go to state 15
    expr                   go to state 16
    id                     go to state 17


State 9

    2 units: script_unit •

    $default  reduce using rule 2 (units)


State 10

    4 script_unit: statement •

    $default  reduce using rule 4 (script_unit)


State 11

   21 statement: single_line_statement • sep

    SEMICOLON  shift, and go to state 5
    NEWLINE    shift, and go to state 6
    COMMENT    shift, and go to state 7

    sep      go to state 23
    sep_one  go to state 19


State 12

   22 statement: multi_line_statement •
   23          | multi_line_statement • sep

    SEMICOLON  shift, and go to state 5
    NEWLINE    shift, and go to state 6
    COMMENT    shift, and go to state 7

    $default  reduce using rule 22 (statement)

    sep      go to state 24
    sep_one  go to state 19


State 13

   25 multi_line_statement: if_statement •

    $default  reduce using rule 25 (multi_line_statement)


State 14

   24 single_line_statement: expression_statment •

    $default  reduce using rule 24 (single_line_statement)


State 15

   29 string: string • string_literal
   34 expr: string •

    string_literal  shift, and go to state 25

    $default  reduce using rule 34 (expr)


State 16

   28 expression_statment: expr •

    $default  reduce using rule 28 (expression_statment)


State 17

   31 string: id • string_literal
   32 expr: id •

    string_literal  shift, and go to state 26

    $default  reduce using rule 32 (expr)


State 18

    3 units: sep •
   36 sep: sep • sep_one

    SEMICOLON  shift, and go to state 5
    NEWLINE    shift, and go to state 6
    COMMENT    shift, and go to state 7

    $default  reduce using rule 3 (units)

    sep_one  go to state 27


State 19

   37 sep: sep_one •

    $default  reduce using rule 37 (sep)


State 20

   26 if_statement: IF expr • COLON body_stmts
   27             | IF expr • COLON body_stmts ELSE COLON body_stmts

    COLON  shift, and go to state 28


State 21

    0 $accept: units END_OF_FILE •

    $default  accept


State 22

    1 units: units script_unit •

    $default  reduce using rule 1 (units)


State 23

   21 statement: single_line_statement sep •
   36 sep: sep • sep_one

    SEMICOLON  shift, and go to state 5
    NEWLINE    shift, and go to state 6
    COMMENT    shift, and go to state 7

    $default  reduce using rule 21 (statement)

    sep_one  go to state 27


State 24

   23 statement: multi_line_statement sep •
   36 sep: sep • sep_one

    SEMICOLON  shift, and go to state 5
    NEWLINE    shift, and go to state 6
    COMMENT    shift, and go to state 7

    $default  reduce using rule 23 (statement)

    sep_one  go to state 27


State 25

   29 string: string string_literal •

    $default  reduce using rule 29 (string)


State 26

   31 string: id string_literal •

    $default  reduce using rule 31 (string)


State 27

   36 sep: sep sep_one •

    $default  reduce using rule 36 (sep)


State 28

   26 if_statement: IF expr COLON • body_stmts
   27             | IF expr COLON • body_stmts ELSE COLON body_stmts

    integer_literal  shift, and go to state 1
    identifier       shift, and go to state 2
    string_literal   shift, and go to state 3
    SEMICOLON        shift, and go to state 5
    NEWLINE          shift, and go to state 6
    COMMENT          shift, and go to state 7

    sep_statements                    go to state 29
    body_stmts                        go to state 30
    single_line_statements            go to state 31
    single_line_multi_statements      go to state 32
    single_line_multi_statements_opt  go to state 33
    single_line_statement             go to state 34
    expression_statment               go to state 14
    string                            go to state 15
    expr                              go to state 16
    id                                go to state 17
    sep                               go to state 35
    sep_one                           go to state 19


State 29

    8 body_stmts: sep_statements •

    $default  reduce using rule 8 (body_stmts)


State 30

   26 if_statement: IF expr COLON body_stmts •
   27             | IF expr COLON body_stmts • ELSE COLON body_stmts

    ELSE  shift, and go to state 36

    $default  reduce using rule 26 (if_statement)


State 31

    7 body_stmts: single_line_statements •

    $default  reduce using rule 7 (body_stmts)


State 32

   11 single_line_statements: single_line_multi_statements • NEWLINE
   12                       | single_line_multi_statements • COMMENT NEWLINE

    NEWLINE  shift, and go to state 37
    COMMENT  shift, and go to state 38


State 33

   17 single_line_multi_statements: single_line_multi_statements_opt • single_line_statement
   18                             | single_line_multi_statements_opt • single_line_statement SEMICOLON
   19 single_line_multi_statements_opt: single_line_multi_statements_opt • single_line_statement SEMICOLON

    integer_literal  shift, and go to state 1
    identifier       shift, and go to state 2
    string_literal   shift, and go to state 3

    single_line_statement  go to state 39
    expression_statment    go to state 14
    string                 go to state 15
    expr                   go to state 16
    id                     go to state 17


State 34

   13 single_line_statements: single_line_statement • NEWLINE
   14                       | single_line_statement • SEMICOLON NEWLINE
   15                       | single_line_statement • SEMICOLON COMMENT NEWLINE
   16                       | single_line_statement • COMMENT NEWLINE
   20 single_line_multi_statements_opt: single_line_statement • SEMICOLON

    SEMICOLON  shift, and go to state 40
    NEWLINE    shift, and go to state 41
    COMMENT    shift, and go to state 42


State 35

    6 sep_statements: sep • statements
   36 sep: sep • sep_one

    SEMICOLON  shift, and go to state 5
    INDENT     shift, and go to state 43
    NEWLINE    shift, and go to state 6
    COMMENT    shift, and go to state 7

    statements  go to state 44
    sep_one     go to state 27


State 36

   27 if_statement: IF expr COLON body_stmts ELSE • COLON body_stmts

    COLON  shift, and go to state 45


State 37

   11 single_line_statements: single_line_multi_statements NEWLINE •

    $default  reduce using rule 11 (single_line_statements)


State 38

   12 single_line_statements: single_line_multi_statements COMMENT • NEWLINE

    NEWLINE  shift, and go to state 46


State 39

   17 single_line_multi_statements: single_line_multi_statements_opt single_line_statement •
   18                             | single_line_multi_statements_opt single_line_statement • SEMICOLON
   19 single_line_multi_statements_opt: single_line_multi_statements_opt single_line_statement • SEMICOLON

    SEMICOLON  shift, and go to state 47

    $default  reduce using rule 17 (single_line_multi_statements)


State 40

   14 single_line_statements: single_line_statement SEMICOLON • NEWLINE
   15                       | single_line_statement SEMICOLON • COMMENT NEWLINE
   20 single_line_multi_statements_opt: single_line_statement SEMICOLON •

    NEWLINE  shift, and go to state 48
    COMMENT  shift, and go to state 49

    $default  reduce using rule 20 (single_line_multi_statements_opt)


State 41

   13 single_line_statements: single_line_statement NEWLINE •

    $default  reduce using rule 13 (single_line_statements)


State 42

   16 single_line_statements: single_line_statement COMMENT • NEWLINE

    NEWLINE  shift, and go to state 50


State 43

    5 statements: INDENT • statements1 DEDENT

    integer_literal  shift, and go to state 1
    identifier       shift, and go to state 2
    string_literal   shift, and go to state 3
    IF               shift, and go to state 4

    statements1            go to state 51
    statement              go to state 52
    single_line_statement  go to state 11
    multi_line_statement   go to state 12
    if_statement           go to state 13
    expression_statment    go to state 14
    string                 go to state 15
    expr                   go to state 16
    id                     go to state 17


State 44

    6 sep_statements: sep statements •

    $default  reduce using rule 6 (sep_statements)


State 45

   27 if_statement: IF expr COLON body_stmts ELSE COLON • body_stmts

    integer_literal  shift, and go to state 1
    identifier       shift, and go to state 2
    string_literal   shift, and go to state 3
    SEMICOLON        shift, and go to state 5
    NEWLINE          shift, and go to state 6
    COMMENT          shift, and go to state 7

    sep_statements                    go to state 29
    body_stmts                        go to state 53
    single_line_statements            go to state 31
    single_line_multi_statements      go to state 32
    single_line_multi_statements_opt  go to state 33
    single_line_statement             go to state 34
    expression_statment               go to state 14
    string                            go to state 15
    expr                              go to state 16
    id                                go to state 17
    sep                               go to state 35
    sep_one                           go to state 19


State 46

   12 single_line_statements: single_line_multi_statements COMMENT NEWLINE •

    $default  reduce using rule 12 (single_line_statements)


State 47

   18 single_line_multi_statements: single_line_multi_statements_opt single_line_statement SEMICOLON •
   19 single_line_multi_statements_opt: single_line_multi_statements_opt single_line_statement SEMICOLON •

    NEWLINE   reduce using rule 18 (single_line_multi_statements)
    COMMENT   reduce using rule 18 (single_line_multi_statements)
    $default  reduce using rule 19 (single_line_multi_statements_opt)


State 48

   14 single_line_statements: single_line_statement SEMICOLON NEWLINE •

    $default  reduce using rule 14 (single_line_statements)


State 49

   15 single_line_statements: single_line_statement SEMICOLON COMMENT • NEWLINE

    NEWLINE  shift, and go to state 54


State 50

   16 single_line_statements: single_line_statement COMMENT NEWLINE •

    $default  reduce using rule 16 (single_line_statements)


State 51

    5 statements: INDENT statements1 • DEDENT
    9 statements1: statements1 • statement

    integer_literal  shift, and go to state 1
    identifier       shift, and go to state 2
    string_literal   shift, and go to state 3
    IF               shift, and go to state 4
    DEDENT           shift, and go to state 55

    statement              go to state 56
    single_line_statement  go to state 11
    multi_line_statement   go to state 12
    if_statement           go to state 13
    expression_statment    go to state 14
    string                 go to state 15
    expr                   go to state 16
    id                     go to state 17


State 52

   10 statements1: statement •

    $default  reduce using rule 10 (statements1)


State 53

   27 if_statement: IF expr COLON body_stmts ELSE COLON body_stmts •

    $default  reduce using rule 27 (if_statement)


State 54

   15 single_line_statements: single_line_statement SEMICOLON COMMENT NEWLINE •

    $default  reduce using rule 15 (single_line_statements)


State 55

    5 statements: INDENT statements1 DEDENT •

    $default  reduce using rule 5 (statements)


State 56

    9 statements1: statements1 statement •

    $default  reduce using rule 9 (statements1)
