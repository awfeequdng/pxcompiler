Terminals unused in grammar

    integer_literal
    string_literal
    AMPERSAND
    AND
    ARROW
    AS
    AWAIT
    BREAK
    CLASS
    COLON
    COLON_BANG
    COMMA
    CONTINUE
    DOUBLE_ARROW
    ELSE
    EQUAL_EQUAL
    FALSE
    FOR
    IF
    IS
    LEFT_CURLY_BRACE
    LEFT_PARENTHESIS
    LEFT_SQUARE_BRACKET
    MINUS
    NOT
    OR
    PERIOD
    PLUS
    RETURN
    RIGHT_CURLY_BRACE
    RIGHT_PARENTHESIS
    RIGHT_SQUARE_BRACKET
    SELF
    SLASH
    STRING
    TRUE
    UNDERSCORE
    WHILE


Grammar

    0 $accept: input END_OF_FILE

    1 input: import_directives

    2 import_directives: ε
    3                  | import_directives import_directive

    4 import_directive: IMPORT identifier SEMICOLON binding_lhs

    5 binding_lhs: EQUAL


Terminals, with rules where they appear

    END_OF_FILE (0) 0
    error (256)
    integer_literal <int> (258)
    identifier <std::string> (259) 4
    string_literal <std::string> (260)
    AMPERSAND (261)
    AND (262)
    ARROW (263)
    AS (264)
    AWAIT (265)
    BREAK (266)
    CLASS (267)
    COLON (268)
    COLON_BANG (269)
    COMMA (270)
    CONTINUE (271)
    DOUBLE_ARROW (272)
    ELSE (273)
    EQUAL (274) 5
    EQUAL_EQUAL (275)
    FALSE (276)
    FOR (277)
    IF (278)
    IMPORT (279) 4
    IS (280)
    LEFT_CURLY_BRACE (281)
    LEFT_PARENTHESIS (282)
    LEFT_SQUARE_BRACKET (283)
    MINUS (284)
    NOT (285)
    OR (286)
    PERIOD (287)
    PLUS (288)
    RETURN (289)
    RIGHT_CURLY_BRACE (290)
    RIGHT_PARENTHESIS (291)
    RIGHT_SQUARE_BRACKET (292)
    SELF (293)
    SEMICOLON (294) 4
    SLASH (295)
    STRING (296)
    TRUE (297)
    UNDERSCORE (298)
    WHILE (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    input <std::string> (46)
        on left: 1
        on right: 0
    import_directives <std::string> (47)
        on left: 2 3
        on right: 1 3
    import_directive <std::string> (48)
        on left: 4
        on right: 3
    binding_lhs <std::string> (49)
        on left: 5
        on right: 4


State 0

    0 $accept: • input END_OF_FILE

    $default  reduce using rule 2 (import_directives)

    input              go to state 1
    import_directives  go to state 2


State 1

    0 $accept: input • END_OF_FILE

    END_OF_FILE  shift, and go to state 3


State 2

    1 input: import_directives •
    3 import_directives: import_directives • import_directive

    IMPORT  shift, and go to state 4

    $default  reduce using rule 1 (input)

    import_directive  go to state 5


State 3

    0 $accept: input END_OF_FILE •

    $default  accept


State 4

    4 import_directive: IMPORT • identifier SEMICOLON binding_lhs

    identifier  shift, and go to state 6


State 5

    3 import_directives: import_directives import_directive •

    $default  reduce using rule 3 (import_directives)


State 6

    4 import_directive: IMPORT identifier • SEMICOLON binding_lhs

    SEMICOLON  shift, and go to state 7


State 7

    4 import_directive: IMPORT identifier SEMICOLON • binding_lhs

    EQUAL  shift, and go to state 8

    binding_lhs  go to state 9


State 8

    5 binding_lhs: EQUAL •

    $default  reduce using rule 5 (binding_lhs)


State 9

    4 import_directive: IMPORT identifier SEMICOLON binding_lhs •

    $default  reduce using rule 4 (import_directive)
